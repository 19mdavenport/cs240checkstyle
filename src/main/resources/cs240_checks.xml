<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <module name="TreeWalker">
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}'' (lowercase)."/>
        </module>
        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Type name ''{0}'' must match pattern ''{1}'' (UpperCamelCase)."/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Method name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Member name ''{0}'' must match pattern ''{1}'' (lowerCamelCase).  (If this was meant to be a constant you may have forgotten to declare it 'static')"/>
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Static variable name ''{0}'' must match pattern ''{1}'' (lowerCamelCase). (If this was meant to be a constant you may have forgotten to declare it 'final')"/>
        </module>
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <message key="name.invalidPattern"
                     value="Constant name ''{0}'' must match pattern ''{1}'' (UPPER_SNAKE_CASE)."/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Parameter name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Lambda parameter name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Catch parameter name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="PatternVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Pattern variable name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
            <message key="name.invalidPattern"
                     value="Class type name ''{0}'' must match pattern ''{1}'' (A single letter, like 'T')."/>
        </module>
        <module name="RecordComponentName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Record component name ''{0}'' must match pattern ''{1}'' (lowerCamelCase)."/>
        </module>
        <module name="RecordTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
            <message key="name.invalidPattern"
                     value="Record type name ''{0}'' must match pattern ''{1}'' (A single letter, like 'T')."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
            <message key="name.invalidPattern"
                     value="Method type name ''{0}'' must match pattern ''{1}'' (A single letter, like 'T')."/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
            <message key="name.invalidPattern"
                     value="Interface type name ''{0}'' must match pattern ''{1}'' (A single letter, like 'T')."/>
        </module>
        <module name="SuppressWarnings">
            <property name="format" value="^unchecked$|^unused$"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>    

        <module name="NoCodeInFile"/>

        <module name="NestingDepth">
            <property name="max" value="4"/>
        </module>

        <module name="NeedBraces"/>

        <module name="TodoComment">
            <property name="format" value="(TODO)|(FIXME)"/>
            <property name="severity" value="warning"/>
            <message key="todo.match" value="TODO or FIXME comment"/>
        </module>

        <module name="DuplicateMethod">
            <property name="minComplexity" value="75"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="DuplicateBlock">
            <property name="minComplexity" value="60"/>
        </module>

        <module name="MethodLength">
            <property name="max" value="100"/>
        </module>

        <module name="UnusedMethodWalker">
            <property name="allowedAnnotations"
                      value="Override, OnWebSocketMessage, OnWebSocketClose, OnWebSocketConnect, OnWebSocketError, OnWebSocketFrame, Test, BeforeEach, AfterEach, BeforeAll, AfterAll, ParameterizedTest"/>
            <property name="excludedMethods"
                      value="main, equals, hashCode, toString, addPiece, getPiece, resetBoard, getTeamTurn, setTeamTurn, validMoves, makeMove, isInCheck, isInCheckmate, isInStalemate, setBoard, getBoard, getStartPosition, getEndPosition, getPromotionPiece, getTeamColor, getPieceType, pieceMoves, getRow, getColumn, run, stop, createDatabase, getConnection, moveCursorToLocation, getServerMessageType, getAuthString, getCommandType"/>
            <property name="allowGetters" value="true"/>
            <property name="maxGetterComplexity" value="25"/>
            <property name="allowSetters" value="true"/>
            <property name="maxSetterComplexity" value="30"/>
            <property name="methodParameterAnnotations" value="MethodSource"/>
        </module>
    </module>
    <module name="UnusedMethodReporter"/>

    <module name="DuplicateLines">
        <property name="min" value="15"/>
    </module>
    <module name="CommentedCode">
        <property name="min" value="3"/>
    </module>
    <module name="FilesPerPackage">
        <property name="max" value="15"/>
    </module>

    <module name="FileLength">
        <property name="max" value="500"/>
    </module>

    <module name="LineLength">
        <property name="max" value="150"/>
    </module>

    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern"
                  value="^[^.]+$|\.(?!(java)$)([^.]+$)"/>
    </module>
</module>
